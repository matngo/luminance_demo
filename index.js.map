{"mappings":"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","sources":["src/index.js","src/App.tsx","src/Item.tsx","src/ColorConversion.ts","src/ConfigHSL.tsx","src/ConfigLAB.tsx","src/GlobalConfig.tsx"],"sourcesContent":["import { createRoot } from \"react-dom/client\";\r\nimport { BrowserRouter } from \"react-router\";\r\nimport { App } from \"./App\";\r\n\r\nconst container = document.getElementById(\"app\");\r\nconst root = createRoot(container);\r\nroot.render(\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <App />\r\n  </BrowserRouter>\r\n);\r\n","import * as React from \"react\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { Reorder } from \"framer-motion\";\r\nimport { Item } from \"./Item.tsx\";\r\n\r\nimport { hsl2rgb, lab2rgb, rgb2hsl, rgb2lab } from \"./ColorConversion.ts\";\r\nimport { ConfigHSL } from \"./ConfigHSL.tsx\";\r\nimport { ConfigLAB } from \"./ConfigLAB.tsx\";\r\nimport { GlobalConfig } from \"./GlobalConfig.tsx\";\r\n\r\nimport type { HSLConfig } from \"./ConfigHSL.tsx\";\r\nimport type { LABConfig } from \"./ConfigLAB.tsx\";\r\nimport type { GlobalConfig as GlobalConfigType } from \"./GlobalConfig.tsx\";\r\nimport type { RGB, HSL, LAB } from \"./ColorConversion.ts\";\r\nimport {\r\n  createTheme,\r\n  CssBaseline,\r\n  Stack,\r\n  ThemeProvider,\r\n  Typography,\r\n} from \"@mui/material\";\r\n\r\nexport type Color = {\r\n  rgb: RGB;\r\n  lab: LAB;\r\n  hsl: HSL;\r\n  position: number;\r\n  key: number;\r\n};\r\n\r\nfunction randomBetween(min: number, max: number): number {\r\n  return Math.random() * (max - min) + min;\r\n}\r\n\r\nfunction initialItemsLAB(n: number, config: LABConfig): Color[] {\r\n  const lRange = config.lRange;\r\n  const stepSize = (lRange[1] - lRange[0]) / n;\r\n  const LABs = Array.from(\r\n    { length: n },\r\n    (_, i): LAB => ({\r\n      L: randomBetween(\r\n        i * stepSize + lRange[0],\r\n        i * stepSize + stepSize + lRange[0]\r\n      ),\r\n      a: randomBetween(config.aRange[0], config.aRange[1]),\r\n      b: randomBetween(config.bRange[0], config.bRange[1]),\r\n    })\r\n  );\r\n  const colors = LABs.map((LAB, index): Color => {\r\n    const rgb = lab2rgb(LAB);\r\n    const hsl = rgb2hsl(rgb);\r\n    return { lab: LAB, rgb: lab2rgb(LAB), position: index, hsl, key: index };\r\n  });\r\n  return shuffle(colors);\r\n}\r\n\r\nfunction initialItemsHSL(n: number, config: HSLConfig): Color[] {\r\n  const lRange = config.lRange;\r\n  const stepSize = (lRange[1] - lRange[0]) / n;\r\n  const hRange = config.hRange.map((v) => v / 100);\r\n  const sRange = config.sRange.map((v) => v / 100);\r\n  const HSLs = Array.from(\r\n    { length: n },\r\n    (_, i): HSL => ({\r\n      L:\r\n        randomBetween(\r\n          i * stepSize + lRange[0],\r\n          i * stepSize + stepSize + lRange[0]\r\n        ) / 100,\r\n      s: randomBetween(sRange[0], sRange[1]),\r\n      h: randomBetween(hRange[0], hRange[1]),\r\n    })\r\n  );\r\n  const colors = HSLs.map((hsl, index): Color => {\r\n    const rgb = hsl2rgb(hsl);\r\n    const lab = rgb2lab(rgb);\r\n    return { lab: lab, rgb: rgb, position: index, hsl, key: index };\r\n  });\r\n\r\n  return shuffle(colors);\r\n}\r\n\r\nfunction shuffle(a) {\r\n  const array = [...a];\r\n  let currentIndex = array.length;\r\n\r\n  // While there remain elements to shuffle...\r\n  while (currentIndex != 0) {\r\n    // Pick a remaining element...\r\n    let randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex--;\r\n\r\n    // And swap it with the current element.\r\n    [array[currentIndex], array[randomIndex]] = [\r\n      array[randomIndex],\r\n      array[currentIndex],\r\n    ];\r\n  }\r\n  return [...array];\r\n}\r\n\r\nconst levenshteinDistance = (s: Array<any>, t: Array<any>) => {\r\n  if (!s.length) return t.length;\r\n  if (!t.length) return s.length;\r\n  const arr: number[][] = [];\r\n  for (let i = 0; i <= t.length; i++) {\r\n    arr[i] = [i];\r\n    for (let j = 1; j <= s.length; j++) {\r\n      arr[i][j] =\r\n        i === 0\r\n          ? j\r\n          : Math.min(\r\n              arr[i - 1][j] + 1,\r\n              arr[i][j - 1] + 1,\r\n              arr[i - 1][j - 1] + (s[j - 1] === t[i - 1] ? 0 : 1)\r\n            );\r\n    }\r\n  }\r\n  return arr[t.length][s.length];\r\n};\r\n\r\nexport function App() {\r\n  const [score, setScore] = useState(0);\r\n  const [items, setItems] = useState<Color[]>([]);\r\n  const [hslConfig, setHSLConfig] = useState<HSLConfig>({\r\n    hRange: [0, 100],\r\n    sRange: [0, 100],\r\n    lRange: [0, 100],\r\n  });\r\n\r\n  const [labConfig, setLABConfig] = useState<LABConfig>({\r\n    lRange: [0, 100],\r\n    aRange: [-127, 128],\r\n    bRange: [-127, 128],\r\n  });\r\n\r\n  const [globalConfig, setGlobalConfig] = useState<GlobalConfigType>({\r\n    useHSL: false,\r\n    displayBW: false,\r\n    nItems: 10,\r\n  });\r\n\r\n  useEffect(() => {\r\n    reset();\r\n  }, [globalConfig.nItems, hslConfig, labConfig]);\r\n\r\n  useEffect(() => {\r\n    const currentPositions = items.map((item) => item.position);\r\n    const rightPositions = [...Array(globalConfig.nItems).keys()];\r\n    const distance = levenshteinDistance(currentPositions, rightPositions);\r\n\r\n    setScore(globalConfig.nItems - distance);\r\n  }, [items]);\r\n\r\n  useEffect(() => {\r\n    const colorKey = globalConfig.useHSL ? \"hsl\" : \"lab\";\r\n    const itemsCopy: Color[] = items.toSorted(\r\n      (a: Color, b: Color) => a[colorKey].L > b[colorKey].L\r\n    );\r\n    const newPositions = Array(globalConfig.nItems);\r\n    if (!itemsCopy.length) {\r\n      return;\r\n    }\r\n    for (let i = 0; i < globalConfig.nItems; i++) {\r\n      newPositions[itemsCopy[i].key] = i;\r\n    }\r\n\r\n    setItems(\r\n      items.map((item: Color) => ({\r\n        ...item,\r\n        position: newPositions[item.key],\r\n      }))\r\n    );\r\n  }, [globalConfig.useHSL]);\r\n\r\n  const reset = () => {\r\n    globalConfig.useHSL\r\n      ? setItems(initialItemsHSL(globalConfig.nItems, hslConfig))\r\n      : setItems(initialItemsLAB(globalConfig.nItems, labConfig));\r\n  };\r\n\r\n  const onReorder = (items) => {\r\n    setItems(items);\r\n  };\r\n\r\n  const sort = () => {\r\n    const sorted = items.toSorted((a, b) => (a.position < b.position ? -1 : 1));\r\n    console.log(sorted);\r\n    setItems(sorted);\r\n  };\r\n\r\n  const onShuffle = () => {\r\n    setItems([...shuffle(items)]);\r\n  };\r\n\r\n  const computeDisplayColor = (color: Color) => {\r\n    const rgb = color.rgb;\r\n    const L = globalConfig.useHSL\r\n      ? color.hsl.L * 255\r\n      : Math.floor(color.lab.L * 2.55);\r\n    return globalConfig.displayBW\r\n      ? `rgb(${L},${L},${L})`\r\n      : `rgb(${rgb.r} ${rgb.g} ${rgb.b})`;\r\n  };\r\n  const theme = createTheme({\r\n    typography: {\r\n      htmlFontSize: 12,\r\n    },\r\n  });\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"xl\">\r\n        <h1>Démo de perception des luminances</h1>\r\n        <Typography>\r\n          Déplacer les blocs de couleurs afin de les trier par ordre de\r\n          luminances croissantes. Les différents réglages permettent de faire\r\n          varier l'étendue de variation des paramètres des espaces\r\n          colorimétriques.\r\n        </Typography>\r\n        <Reorder.Group axis=\"x\" onReorder={onReorder} values={items}>\r\n          {items.map((item) => (\r\n            <Item\r\n              item={item}\r\n              key={item.key}\r\n              displayColor={computeDisplayColor(item)}\r\n              width={`${100 / globalConfig.nItems}%`}\r\n            />\r\n          ))}\r\n        </Reorder.Group>\r\n        <Stack spacing={2}>\r\n          <h2>\r\n            Configuration de l'espace colorimétrique{\" \"}\r\n            {globalConfig.useHSL ? \"HSL\" : \"LAB\"}\r\n          </h2>\r\n          {globalConfig.useHSL && (\r\n            <ConfigHSL onChange={setHSLConfig} config={hslConfig} />\r\n          )}\r\n          {!globalConfig.useHSL && (\r\n            <ConfigLAB onChange={setLABConfig} config={labConfig} />\r\n          )}\r\n          <h2>Autres paramètres</h2>\r\n          <GlobalConfig\r\n            config={globalConfig}\r\n            onChange={setGlobalConfig}\r\n            onSort={sort}\r\n            onShuffle={onShuffle}\r\n            reset={reset}\r\n          />\r\n        </Stack>\r\n        <h2>Score</h2>\r\n        {score}\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { Reorder } from \"framer-motion\";\r\n\r\ninterface Props {\r\n  item: any;\r\n  displayColor: string;\r\n  width: string;\r\n  key: any;\r\n}\r\n\r\nexport const Item = ({ item, displayColor, width, key }: Props) => {\r\n  return (\r\n    <Reorder.Item\r\n      value={item}\r\n      id={item.position}\r\n      className={\"color-swatch\"}\r\n      style={{ backgroundColor: displayColor, width: width }}\r\n      key={key}\r\n    />\r\n  );\r\n};\r\n","export type LAB = {\r\n  L: number;\r\n  a: number;\r\n  b: number;\r\n};\r\n\r\nexport type RGB = {\r\n  r: number;\r\n  g: number;\r\n  b: number;\r\n};\r\n\r\nexport type HSL = {\r\n  h: number;\r\n  s: number;\r\n  L: number;\r\n};\r\n\r\nfunction hue2rgb(p, q, t) {\r\n  if (t < 0) t += 1;\r\n  if (t > 1) t -= 1;\r\n  if (t < 1 / 6) return p + (q - p) * 6 * t;\r\n  if (t < 1 / 2) return q;\r\n  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n  return p;\r\n}\r\n\r\nexport function hsl2rgb({ h, s, L }: HSL): RGB {\r\n  var r, g, b;\r\n\r\n  if (s == 0) {\r\n    r = g = b = L; // achromatic\r\n  } else {\r\n    var q = L < 0.5 ? L * (1 + s) : L + s - L * s;\r\n    var p = 2 * L - q;\r\n\r\n    r = hue2rgb(p, q, h + 1 / 3) * 255;\r\n    g = hue2rgb(p, q, h) * 255;\r\n    b = hue2rgb(p, q, h - 1 / 3) * 255;\r\n  }\r\n  return { r, g, b };\r\n}\r\n\r\nexport function lab2rgb(lab: LAB): RGB {\r\n  let y = (lab.L + 16) / 116;\r\n  let x = lab.a / 500 + y;\r\n  let z = y - lab.b / 200;\r\n  let r, g, b;\r\n\r\n  x = 0.95047 * (x * x * x > 0.008856 ? x * x * x : (x - 16 / 116) / 7.787);\r\n  y = 1.0 * (y * y * y > 0.008856 ? y * y * y : (y - 16 / 116) / 7.787);\r\n  z = 1.08883 * (z * z * z > 0.008856 ? z * z * z : (z - 16 / 116) / 7.787);\r\n\r\n  r = x * 3.2406 + y * -1.5372 + z * -0.4986;\r\n  g = x * -0.9689 + y * 1.8758 + z * 0.0415;\r\n  b = x * 0.0557 + y * -0.204 + z * 1.057;\r\n\r\n  r = r > 0.0031308 ? 1.055 * Math.pow(r, 1 / 2.4) - 0.055 : 12.92 * r;\r\n  g = g > 0.0031308 ? 1.055 * Math.pow(g, 1 / 2.4) - 0.055 : 12.92 * g;\r\n  b = b > 0.0031308 ? 1.055 * Math.pow(b, 1 / 2.4) - 0.055 : 12.92 * b;\r\n\r\n  return {\r\n    r: Math.max(0, Math.min(1, r)) * 255,\r\n    g: Math.max(0, Math.min(1, g)) * 255,\r\n    b: Math.max(0, Math.min(1, b)) * 255,\r\n  };\r\n}\r\n\r\nexport function rgb2hsl({ r, g, b }): HSL {\r\n  (r /= 255), (g /= 255), (b /= 255);\r\n\r\n  var max = Math.max(r, g, b),\r\n    min = Math.min(r, g, b);\r\n  var h,\r\n    s,\r\n    l = (max + min) / 2;\r\n\r\n  if (max == min) {\r\n    h = s = 0; // achromatic\r\n  } else {\r\n    var d = max - min;\r\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\r\n    switch (max) {\r\n      case r:\r\n        h = (g - b) / d + (g < b ? 6 : 0);\r\n        break;\r\n      case g:\r\n        h = (b - r) / d + 2;\r\n        break;\r\n      case b:\r\n        h = (r - g) / d + 4;\r\n        break;\r\n    }\r\n\r\n    h /= 6;\r\n  }\r\n\r\n  return { h, s, L: l };\r\n}\r\n\r\nexport function rgb2lab({ r, g, b }: RGB): LAB {\r\n  var r = r / 255,\r\n    g = g / 255,\r\n    b = b / 255,\r\n    x,\r\n    y,\r\n    z;\r\n\r\n  r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\r\n  g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\r\n  b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\r\n\r\n  x = (r * 0.4124 + g * 0.3576 + b * 0.1805) / 0.95047;\r\n  y = (r * 0.2126 + g * 0.7152 + b * 0.0722) / 1.0;\r\n  z = (r * 0.0193 + g * 0.1192 + b * 0.9505) / 1.08883;\r\n\r\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\r\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\r\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\r\n\r\n  return { L: 116 * y - 16, a: 500 * (x - y), b: 200 * (y - z) };\r\n}\r\n","import * as React from \"react\";\r\nimport { Typography, Box, Slider, Grid2 as Grid } from \"@mui/material\";\r\n\r\nexport type HSLConfig = {\r\n  hRange: number[];\r\n  sRange: number[];\r\n  lRange: number[];\r\n};\r\n\r\ntype Props = {\r\n  config: HSLConfig;\r\n  onChange: (hslConfig: HSLConfig) => void;\r\n};\r\nexport function ConfigHSL({ config, onChange }: Props) {\r\n  const marks = [0, 50, 100].map((v) => ({ label: v, value: v }));\r\n  return (\r\n    <Box>\r\n      <Grid container spacing={4}>\r\n        <Grid size={4}>\r\n          <Typography id=\"h-range-slider\" gutterBottom>\r\n            Etendue de luminance\r\n          </Typography>\r\n          <Slider\r\n            value={config.lRange}\r\n            onChange={(_, value) =>\r\n              onChange({ ...config, lRange: value as number[] })\r\n            }\r\n            min={0}\r\n            max={100}\r\n            marks={marks}\r\n          />\r\n        </Grid>\r\n        <Grid size={4}>\r\n          <Typography id=\"h-range-slider\" gutterBottom>\r\n            Etendue des teintes\r\n          </Typography>\r\n          <Slider\r\n            value={config.hRange}\r\n            onChange={(_, value) =>\r\n              onChange({ ...config, hRange: value as number[] })\r\n            }\r\n            min={0}\r\n            max={100}\r\n            marks={marks}\r\n          />\r\n        </Grid>\r\n        <Grid size={4}>\r\n          <Typography id=\"h-range-slider\" gutterBottom>\r\n            Etendue de saturation\r\n          </Typography>\r\n          <Slider\r\n            value={config.sRange}\r\n            onChange={(_, value) =>\r\n              onChange({ ...config, sRange: value as number[] })\r\n            }\r\n            min={0}\r\n            max={100}\r\n            marks={marks}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { Typography, Box, Slider, Grid2 as Grid } from \"@mui/material\";\r\n\r\nexport type LABConfig = {\r\n  lRange: number[];\r\n  aRange: number[];\r\n  bRange: number[];\r\n};\r\n\r\ntype Props = {\r\n  config: LABConfig;\r\n  onChange: (config: LABConfig) => void;\r\n};\r\nconst marks = [-127, 0, 128].map((v) => ({ value: v, label: v }));\r\nexport function ConfigLAB({ config, onChange }: Props) {\r\n  return (\r\n    <Box>\r\n      <Grid container spacing={4}>\r\n        <Grid size={4}>\r\n          <Typography id=\"l-range-slider\" gutterBottom>\r\n            Luminosity Range\r\n          </Typography>\r\n          <Slider\r\n            value={config.lRange}\r\n            onChange={(_, value) =>\r\n              onChange({ ...config, lRange: value as number[] })\r\n            }\r\n            min={0}\r\n            max={100}\r\n          />\r\n        </Grid>\r\n        <Grid size={4}>\r\n          <Typography id=\"a-range-slider\" gutterBottom>\r\n            Green-red Range\r\n          </Typography>\r\n          <Slider\r\n            value={config.aRange}\r\n            onChange={(_, value) =>\r\n              onChange({ ...config, aRange: value as number[] })\r\n            }\r\n            min={-127}\r\n            max={128}\r\n            marks={marks}\r\n          />\r\n        </Grid>\r\n        <Grid size={4}>\r\n          <Typography id=\"b-range-slider\" gutterBottom>\r\n            Blue-Yellow Range\r\n          </Typography>\r\n          <Slider\r\n            value={config.bRange}\r\n            onChange={(_, value) =>\r\n              onChange({ ...config, bRange: value as number[] })\r\n            }\r\n            min={-127}\r\n            max={128}\r\n            marks={marks}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport {\r\n  Typography,\r\n  Box,\r\n  Grid2 as Grid,\r\n  Switch,\r\n  Slider,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Button,\r\n  Stack,\r\n} from \"@mui/material\";\r\n\r\nexport type GlobalConfig = {\r\n  useHSL: boolean;\r\n  displayBW: boolean;\r\n  nItems: number;\r\n};\r\n\r\ntype Props = {\r\n  config: GlobalConfig;\r\n  onChange: (config: GlobalConfig) => void;\r\n  onShuffle: () => void;\r\n  onSort: () => void;\r\n  reset: () => void;\r\n};\r\n\r\nexport function GlobalConfig({\r\n  config,\r\n  onChange,\r\n  onShuffle,\r\n  onSort,\r\n  reset,\r\n}: Props) {\r\n  const bwSwitch = (\r\n    <Switch\r\n      checked={config.displayBW}\r\n      onChange={() => onChange({ ...config, displayBW: !config.displayBW })}\r\n    />\r\n  );\r\n  const hslSwitch = (\r\n    <Switch\r\n      checked={config.useHSL}\r\n      onChange={() => onChange({ ...config, useHSL: !config.useHSL })}\r\n      label={config.useHSL ? \"Use HSL Colorspace\" : \"Use LAB Colorspace\"}\r\n    />\r\n  );\r\n  const nItemsSlider = (\r\n    <Slider\r\n      value={config.nItems}\r\n      onChange={(_, value) => onChange({ ...config, nItems: value as number })}\r\n      min={5}\r\n      max={30}\r\n      valueLabelDisplay=\"on\"\r\n    />\r\n  );\r\n\r\n  return (\r\n    <Box>\r\n      <Stack>\r\n        <Grid container spacing={4}>\r\n          <Grid size={4}>\r\n            <FormGroup>\r\n              <FormControlLabel\r\n                control={bwSwitch}\r\n                label={config.displayBW ? \"Switch to color\" : \"Switch to BW\"}\r\n              />\r\n              <FormControlLabel\r\n                control={hslSwitch}\r\n                label={\r\n                  config.useHSL\r\n                    ? \"Switch to LAB Colorspace\"\r\n                    : \"Switch to HSL Colorspace\"\r\n                }\r\n              />\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid size={8}>\r\n            <Typography gutterBottom>Number of color swatches</Typography>\r\n            {nItemsSlider}\r\n          </Grid>\r\n        </Grid>\r\n        <Stack spacing={2} direction=\"row\">\r\n          <Button variant=\"contained\" onClick={onSort}>\r\n            Reorder\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={onShuffle}>\r\n            Shuffle\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={reset}>\r\n            Reset\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n}\r\n"],"names":[],"version":3,"file":"index.js.map"}